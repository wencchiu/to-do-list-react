{"version":3,"sources":["components/input.js","components/input-btn.js","components/input-container.js","components/btn-up.js","components/btn-down.js","components/btn-modify.js","components/btn-delete.js","components/task-text.js","components/task.js","components/list-container.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","currentTaskText","onChange","bind","submit","e","this","length","keyCode","target","value","trim","type","placeholder","id","onKeyUp","Component","InputBtn","onClick","InputContainer","state","submitNewTask","setCurrentTaskText","text","setState","addInputTask","className","BtnUp","moveTaskUp","taskNum","BtnDown","moveTaskDown","BtnModify","changeToEditMode","BtnDelete","deleteClicked","TaskText","taskContent","taskInEdit","Task","currentContent","setEditingTaskContent","exitEditMode","content","editTaskContent","ListContainer","taskList","taskNumAndTasks","map","task","key","modifyClicked","App","inputTask","push","index","indexOf","splice","temp","taskNumArr","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b878aea4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.currentTaskText = \"\";\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(e) {\n    if (this.currentTaskText.length >= 1) {\n      if (e.keyCode === 13) {\n        this.props.submit();\n        this.currentTaskText = \"\";\n      }\n    }\n  }\n\n  onChange(e) {\n    this.currentTaskText = e.target.value.trim();\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        placeholder=\"Enter a task\"\n        id=\"to-do-input\"\n        value={this.props.currentTaskText}\n        onChange={this.onChange}\n        onKeyUp={this.submit}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\n\nlet InputBtn = props => {\n  return (\n    <button id=\"input-btn\" onClick={props.onClick}>\n      ADD\n    </button>\n  );\n};\n\nexport default InputBtn;\n","import React, { Component } from \"react\";\nimport Input from \"./input\";\nimport InputBtn from \"./input-btn\";\n\nclass InputContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTaskText: \"\"\n    };\n    this.submitNewTask = this.submitNewTask.bind(this);\n    this.setCurrentTaskText = this.setCurrentTaskText.bind(this);\n  }\n\n  setCurrentTaskText(text) {\n    this.setState({ currentTaskText: text });\n  }\n\n  submitNewTask() {\n    this.setState({ currentTaskText: \"\" });\n    this.props.addInputTask(this.state.currentTaskText);\n  }\n\n  render() {\n    return (\n      <div className=\"title-input-container\">\n        <h1 className=\"title\">To-do List</h1>\n        <Input\n          onChange={this.setCurrentTaskText}\n          currentTaskText={this.state.currentTaskText}\n          submit={this.submitNewTask}\n        />\n        <InputBtn onClick={this.submitNewTask} />\n      </div>\n    );\n  }\n}\n\nexport default InputContainer;\n","import React from \"react\";\n\nlet BtnUp = props => {\n  return (\n    <button\n      className=\"up\"\n      onClick={() => {\n        props.moveTaskUp(props.taskNum);\n      }}\n    >\n      Up\n    </button>\n  );\n};\n\nexport default BtnUp;\n","import React from \"react\";\n\nlet BtnDown = props => {\n  return (\n    <button\n      className=\"down\"\n      onClick={() => {\n        props.moveTaskDown(props.taskNum);\n      }}\n    >\n      Down\n    </button>\n  );\n};\n\nexport default BtnDown;\n","import React from \"react\";\n\nlet BtnModify = props => {\n  return (\n    <button\n      className=\"modify\"\n      onClick={() => {\n        props.changeToEditMode(props.taskNum);\n      }}\n    >\n      Modify\n    </button>\n  );\n};\n\nexport default BtnModify;\n","import React from \"react\";\n\nlet BtnDelete = props => {\n  return (\n    <button\n      className=\"delete\"\n      onClick={() => {\n        props.deleteClicked(props.taskNum);\n      }}\n    >\n      Delete\n    </button>\n  );\n};\n\nexport default BtnDelete;\n","import React, { Component } from \"react\";\n\nclass TaskText extends Component {\n  constructor(props) {\n    super(props);\n    this.currentTaskText = props.taskContent;\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n    this.currentTaskText = e.target.value.trim();\n  }\n\n  submit(e) {\n    if (this.currentTaskText.length >= 1) {\n      if (e.keyCode === 13) {\n        this.props.submit();\n      }\n    }\n  }\n\n  render() {\n    return this.props.taskInEdit ? (\n      <input\n        value={this.props.taskContent}\n        onChange={this.onChange}\n        onKeyUp={this.submit}\n      />\n    ) : (\n      <p>{this.props.taskContent}</p>\n    );\n  }\n}\n\nexport default TaskText;\n","import React, { Component } from \"react\";\nimport BtnUp from \"./btn-up\";\nimport BtnDown from \"./btn-down\";\nimport BtnModify from \"./btn-modify\";\nimport BtnDelete from \"./btn-delete\";\nimport TaskText from \"./task-text\";\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskInEdit: false,\n      currentContent: this.props.taskContent\n    };\n    this.changeToEditMode = this.changeToEditMode.bind(this);\n    this.setEditingTaskContent = this.setEditingTaskContent.bind(this);\n    this.exitEditMode = this.exitEditMode.bind(this);\n  }\n\n  changeToEditMode(taskNum) {\n    this.setState({ taskInEdit: true });\n  }\n\n  setEditingTaskContent(content) {\n    this.setState({ currentContent: content });\n  }\n\n  exitEditMode() {\n    this.setState({ taskInEdit: false });\n    this.props.editTaskContent(this.props.taskNum, this.state.currentContent);\n  }\n\n  render() {\n    return (\n      <li>\n        <TaskText\n          taskContent={this.state.currentContent}\n          taskInEdit={this.state.taskInEdit}\n          onChange={this.setEditingTaskContent}\n          submit={this.exitEditMode}\n        />\n        <BtnUp\n          moveTaskUp={this.props.moveTaskUp}\n          taskNum={this.props.taskNum}\n        />\n        <BtnDown\n          moveTaskDown={this.props.moveTaskDown}\n          taskNum={this.props.taskNum}\n        />\n        <BtnModify\n          changeToEditMode={this.changeToEditMode}\n          taskNum={this.props.taskNum}\n        />\n        <BtnDelete\n          deleteClicked={this.props.deleteClicked}\n          taskNum={this.props.taskNum}\n        />\n      </li>\n    );\n  }\n}\n\nexport default Task;\n","import React, { Component } from \"react\";\nimport Task from \"./task\";\n\nclass ListContainer extends Component {\n  render() {\n    var taskList = this.props.taskNumAndTasks.map(task => (\n      <Task\n        taskContent={task.taskContent}\n        key={task.taskNum}\n        taskNum={task.taskNum}\n        modifyClicked={this.props.modifyClicked}\n        deleteClicked={this.props.deleteClicked}\n        editTaskContent={this.props.editTaskContent}\n        moveTaskUp={this.props.moveTaskUp}\n        moveTaskDown={this.props.moveTaskDown}\n      />\n    ));\n    return (\n      <div className=\"to-do-list-container\" id=\"list-container\">\n        <ul className=\"to-do-list\" id=\"to-do-list\">\n          {taskList}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ListContainer;\n","import React, { Component } from \"react\";\nimport InputContainer from \"./components/input-container\";\nimport ListContainer from \"./components/list-container\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskNumAndTasks: []\n    };\n    this.addInputTask = this.addInputTask.bind(this);\n    this.editTaskContent = this.editTaskContent.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.moveTaskUp = this.moveTaskUp.bind(this);\n    this.moveTaskDown = this.moveTaskDown.bind(this);\n    this.taskNum = 0;\n  }\n\n  addInputTask(inputTask) {\n    this.taskNum += 1;\n    this.state.taskNumAndTasks.push({\n      taskNum: this.taskNum,\n      taskContent: inputTask.trim()\n    });\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  editTaskContent(taskNum, content) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    this.state.taskNumAndTasks.splice(index, 1, {\n      taskNum: taskNum,\n      taskContent: content.trim()\n    });\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  deleteClicked(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    this.state.taskNumAndTasks.splice(index, 1);\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  moveTaskUp(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    let temp = this.state.taskNumAndTasks[index];\n    if (index > 0) {\n      this.state.taskNumAndTasks.splice(\n        index - 1,\n        2,\n        temp,\n        this.state.taskNumAndTasks[index - 1]\n      );\n      this.setState({\n        taskNumAndTasks: this.state.taskNumAndTasks\n      });\n    }\n  }\n\n  moveTaskDown(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    let temp = this.state.taskNumAndTasks[index];\n    if (index < taskNumArr.length - 1) {\n      this.state.taskNumAndTasks.splice(\n        index,\n        2,\n        this.state.taskNumAndTasks[index + 1],\n        temp\n      );\n      this.setState({\n        taskNumAndTasks: this.state.taskNumAndTasks\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.taskNumAndTasks);\n    return (\n      <div>\n        <InputContainer addInputTask={this.addInputTask} />\n        <ListContainer\n          taskNumAndTasks={this.state.taskNumAndTasks}\n          deleteClicked={this.deleteClicked}\n          modifyClicked={this.modifyClicked}\n          editTaskContent={this.editTaskContent}\n          moveTaskUp={this.moveTaskUp}\n          moveTaskDown={this.moveTaskDown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}