{"version":3,"sources":["components/input.js","components/input-btn.js","components/input-container.js","components/btn-up.js","components/btn-down.js","components/btn-modify.js","components/btn-delete.js","components/task-text.js","components/task.js","components/list-container.js","App.js","serviceWorker.js","index.js"],"names":["TaskInput","styled","input","Input","props","currentTaskText","onChange","bind","submit","e","this","length","keyCode","target","value","trim","type","placeholder","id","onKeyUp","Component","Button","button","InputBtn","onClick","Wrapper","div","Title","h1","InputBox","InputContainer","state","submitNewTask","setCurrentTaskText","text","setState","addInputTask","BtnUp","moveTaskUp","taskNum","BtnDown","moveTaskDown","BtnModify","changeToEditMode","BtnDelete","deleteClicked","style","css","Text","p","TaskText","taskContent","taskInEdit","Li","li","ButtonWrapper","Task","currentContent","setEditingTaskContent","exitEditMode","content","editTaskContent","List","ul","ListContainer","taskList","taskNumAndTasks","map","task","key","modifyClicked","App","inputTask","push","index","indexOf","splice","temp","taskNumArr","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e311863.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst TaskInput = styled.input`\n  width: 90%;\n  height: 50px;\n  padding-left: 10px;\n  border: none;\n  font-size: 18px;\n  opacity: 0.5;\n  transition: opacity 0.3s;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.currentTaskText = \"\";\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(e) {\n    if (this.currentTaskText.length >= 1) {\n      if (e.keyCode === 13) {\n        this.props.submit();\n        this.currentTaskText = \"\";\n      }\n    }\n  }\n\n  onChange(e) {\n    this.currentTaskText = e.target.value.trim();\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <TaskInput\n        type=\"text\"\n        placeholder=\"Enter a task\"\n        id=\"to-do-input\"\n        value={this.props.currentTaskText}\n        onChange={this.onChange}\n        onKeyUp={this.submit}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 80px;\n  height: 50px;\n  border: none;\n  font-size: 18px;\n  opacity: 0.7;\n  transition: opacity 0.3s;\n\n  @media (max-width: 768px) {\n    width: 40%;\n    max-width: 150px;\n    height: 36px;\n    margin-top: 20px;\n    font-size: 14px;\n  }\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst InputBtn = props => <Button onClick={props.onClick}>ADD</Button>;\n\nexport default InputBtn;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./input\";\nimport InputBtn from \"./input-btn\";\n\nconst Wrapper = styled.div`\n  width: 90%;\n  min-width: 800px;\n  max-width: 1400px;\n  margin: 30px auto 0;\n  background-color: #3d3b71;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 1024px) {\n    min-width: 300px;\n  }\n`;\n\nconst Title = styled.h1`\n  padding: 30px;\n  text-align: center;\n  font-size: 70px;\n  color: #fff;\n\n  @media (max-width: 1024px) {\n    font-size: 48px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 40px;\n    padding: 20px;\n  }\n`;\n\nconst InputBox = styled.div`\n  width: 70%;\n  padding: 20px 0 50px;\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px 0 30px;\n  }\n`;\n\nclass InputContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTaskText: \"\"\n    };\n    this.submitNewTask = this.submitNewTask.bind(this);\n    this.setCurrentTaskText = this.setCurrentTaskText.bind(this);\n  }\n\n  setCurrentTaskText(text) {\n    this.setState({ currentTaskText: text });\n  }\n\n  submitNewTask() {\n    this.setState({ currentTaskText: \"\" });\n    this.props.addInputTask(this.state.currentTaskText);\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>To-do List</Title>\n        <InputBox>\n          <Input\n            onChange={this.setCurrentTaskText}\n            currentTaskText={this.state.currentTaskText}\n            submit={this.submitNewTask}\n          />\n          <InputBtn onClick={this.submitNewTask} />\n        </InputBox>\n      </Wrapper>\n    );\n  }\n}\n\nexport default InputContainer;\n","import React from \"react\";\n\nconst BtnUp = props => (\n  <button onClick={() => props.moveTaskUp(props.taskNum)}>Up</button>\n);\n\nexport default BtnUp;\n","import React from \"react\";\n\nconst BtnDown = props => (\n  <button onClick={() => props.moveTaskDown(props.taskNum)}>Down</button>\n);\n\nexport default BtnDown;\n","import React from \"react\";\n\nconst BtnModify = props => (\n  <button onClick={() => props.changeToEditMode(props.taskNum)}>Modify</button>\n);\n\nexport default BtnModify;\n","import React from \"react\";\n\nconst BtnDelete = props => (\n  <button onClick={() => props.deleteClicked(props.taskNum)}>Delete</button>\n);\n\nexport default BtnDelete;\n","import React, { Component } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst style = css`\n  display: flex;\n  align-items: center;\n  width: 50%;\n  padding-left: 20px;\n  font-size: 22px;\n`;\n\nconst Text = styled.p`\n  ${style}\n`;\n\nconst Input = styled.input`\n  ${style};\n  line-height: 30px;\n  outline: none;\n`;\n\nclass TaskText extends Component {\n  constructor(props) {\n    super(props);\n    this.currentTaskText = props.taskContent;\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n    this.currentTaskText = e.target.value.trim();\n  }\n\n  submit(e) {\n    if (this.currentTaskText.length >= 1) {\n      if (e.keyCode === 13) {\n        this.props.submit();\n      }\n    }\n  }\n\n  render() {\n    return this.props.taskInEdit ? (\n      <Input\n        value={this.props.taskContent}\n        onChange={this.onChange}\n        onKeyUp={this.submit}\n      />\n    ) : (\n      <Text>{this.props.taskContent}</Text>\n    );\n  }\n}\n\nexport default TaskText;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport BtnUp from \"./btn-up\";\nimport BtnDown from \"./btn-down\";\nimport BtnModify from \"./btn-modify\";\nimport BtnDelete from \"./btn-delete\";\nimport TaskText from \"./task-text\";\n\nconst Li = styled.li`\n  list-style-type: none;\n  line-height: 60px;\n  padding: 6px 0;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    line-height: 50px;\n  }\n\n  &:nth-child(odd) {\n    background-color: #fcf7de;\n  }\n\n  &:nth-child(even) {\n    background-color: #f6f5f8;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  line-height: 0;\n  margin-right: 2%;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: 768px) {\n    width: 120px;\n  }\n`;\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskInEdit: false,\n      currentContent: this.props.taskContent\n    };\n    this.changeToEditMode = this.changeToEditMode.bind(this);\n    this.setEditingTaskContent = this.setEditingTaskContent.bind(this);\n    this.exitEditMode = this.exitEditMode.bind(this);\n  }\n\n  changeToEditMode(taskNum) {\n    this.setState({ taskInEdit: true });\n  }\n\n  setEditingTaskContent(content) {\n    this.setState({ currentContent: content });\n  }\n\n  exitEditMode() {\n    this.setState({ taskInEdit: false });\n    this.props.editTaskContent(this.props.taskNum, this.state.currentContent);\n  }\n\n  render() {\n    return (\n      <Li>\n        <TaskText\n          taskContent={this.state.currentContent}\n          taskInEdit={this.state.taskInEdit}\n          onChange={this.setEditingTaskContent}\n          submit={this.exitEditMode}\n        />\n        <ButtonWrapper>\n          <BtnUp\n            moveTaskUp={this.props.moveTaskUp}\n            taskNum={this.props.taskNum}\n          />\n          <BtnDown\n            moveTaskDown={this.props.moveTaskDown}\n            taskNum={this.props.taskNum}\n          />\n          <BtnModify\n            changeToEditMode={this.changeToEditMode}\n            taskNum={this.props.taskNum}\n          />\n          <BtnDelete\n            deleteClicked={this.props.deleteClicked}\n            taskNum={this.props.taskNum}\n          />\n        </ButtonWrapper>\n      </Li>\n    );\n  }\n}\n\nexport default Task;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\n\nconst Wrapper = styled.div`\n  width: 90%;\n  min-width: 800px;\n  max-width: 1400px;\n  margin: auto;\n\n  @media (max-width: 1024px) {\n    min-width: 300px;\n  }\n\n  & > p {\n    text-align: center;\n    font-size: 60px;\n    padding: 20px;\n    background-color: #ececec;\n  }\n`;\n\nconst List = styled.ul`\n  button {\n    border: none;\n    height: 35px;\n    width: 55px;\n    color: #58564f;\n    margin: 10px;\n    font-weight: bold;\n    cursor: pointer;\n\n    @media (max-width: 1024px) {\n      font-size: 12px;\n      margin: 5px;\n      width: 48px;\n    }\n  }\n`;\n\nclass ListContainer extends Component {\n  render() {\n    var taskList = this.props.taskNumAndTasks.map(task => (\n      <Task\n        taskContent={task.taskContent}\n        key={task.taskNum}\n        taskNum={task.taskNum}\n        modifyClicked={this.props.modifyClicked}\n        deleteClicked={this.props.deleteClicked}\n        editTaskContent={this.props.editTaskContent}\n        moveTaskUp={this.props.moveTaskUp}\n        moveTaskDown={this.props.moveTaskDown}\n      />\n    ));\n    return (\n      <Wrapper>\n        <List>{taskList}</List>\n      </Wrapper>\n    );\n  }\n}\n\nexport default ListContainer;\n","import React, { Component } from \"react\";\nimport InputContainer from \"./components/input-container\";\nimport ListContainer from \"./components/list-container\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskNumAndTasks: []\n    };\n    this.addInputTask = this.addInputTask.bind(this);\n    this.editTaskContent = this.editTaskContent.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.moveTaskUp = this.moveTaskUp.bind(this);\n    this.moveTaskDown = this.moveTaskDown.bind(this);\n    this.taskNum = 0;\n  }\n\n  addInputTask(inputTask) {\n    this.taskNum += 1;\n    this.state.taskNumAndTasks.push({\n      taskNum: this.taskNum,\n      taskContent: inputTask.trim()\n    });\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  editTaskContent(taskNum, content) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    this.state.taskNumAndTasks.splice(index, 1, {\n      taskNum: taskNum,\n      taskContent: content.trim()\n    });\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  deleteClicked(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    this.state.taskNumAndTasks.splice(index, 1);\n    this.setState({\n      taskNumAndTasks: this.state.taskNumAndTasks\n    });\n  }\n\n  moveTaskUp(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    let temp = this.state.taskNumAndTasks[index];\n    if (index > 0) {\n      this.state.taskNumAndTasks.splice(\n        index - 1,\n        2,\n        temp,\n        this.state.taskNumAndTasks[index - 1]\n      );\n      this.setState({\n        taskNumAndTasks: this.state.taskNumAndTasks\n      });\n    }\n  }\n\n  moveTaskDown(taskNum) {\n    let taskNumArr = this.state.taskNumAndTasks.map(e => e.taskNum);\n    let index = taskNumArr.indexOf(taskNum);\n    let temp = this.state.taskNumAndTasks[index];\n    if (index < taskNumArr.length - 1) {\n      this.state.taskNumAndTasks.splice(\n        index,\n        2,\n        this.state.taskNumAndTasks[index + 1],\n        temp\n      );\n      this.setState({\n        taskNumAndTasks: this.state.taskNumAndTasks\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <InputContainer addInputTask={this.addInputTask} />\n        <ListContainer\n          taskNumAndTasks={this.state.taskNumAndTasks}\n          deleteClicked={this.deleteClicked}\n          modifyClicked={this.modifyClicked}\n          editTaskContent={this.editTaskContent}\n          moveTaskUp={this.moveTaskUp}\n          moveTaskDown={this.moveTaskDown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}